[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "mypy>=1.2.0",
    "ruff>=0.0.262",
    "black>=23.3.0",
    "isort>=5.12.0",
    "types-openpyxl>=3.1.0.4",
    "openpyxl-stubs>=0.1.25",
]

[project]
name = ""
version = ""
description = ""
authors = [
    {name = "Nikita Noskov", email = "nik-lagan@yandex.ru"},
]
dependencies = [
    "openpyxl>=3.1.2",
    "selectolax>=0.3.12",
    "pandas>=2.0.0",
    "autopep8>=2.0.2",
    "fastapi[uvicorn]>=0.95.1",
    "uvicorn>=0.21.1",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.2",
]
requires-python = ">=3.11"
license = {text = "MIT"}
pythonpath = "src"

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true
no_implicit_optional = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

strict_optional = true
strict_equality = true

[tool.isort]
src_paths = ["src", "tests"]
profile = "black"


[tool.ruff]
select = ["ALL"]
src = ["src", "tests"]
fixable = ["UP", "COM", "F"]
ignore = [
    "E501", # Line Length
    "A003", # Class attribute ... is shadowing a python builtin
    "ANN101",  # Annotation for "self"
    "ANN102",  # Annotation for "cls"
    "D", # pydocstyle
    "PD",  # pandas-vet
    "I",  # Isort
    "UP017",
    "INP001",
    "PLR2004",
    "EXE",
    "TCH001",
    "TCH002",
    "TCH003",
    "RUF001",
    "RUF002",
    "RUF003",
]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "PLR0913", "TID251", "S311"]

[tool.ruff.mccabe]
max-complexity = 6

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends"]

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod", "pydantic.validator"]
staticmethod-decorators = ["staticmethod"]

[tool.ruff.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.flake8-tidy-imports.banned-api]
"functools.partial".msg = "Use core.utils.t_full instead to preserve typing information"
"tests".msg = "Tests are not included in final build"


[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.pdm.scripts]
lint = {composite = [
    "black .",
    "isort .",
    "ruff . --fix",
    "mypy .",
]}
test = {composite = [
    "coverage run",
    "coverage report",
]}

